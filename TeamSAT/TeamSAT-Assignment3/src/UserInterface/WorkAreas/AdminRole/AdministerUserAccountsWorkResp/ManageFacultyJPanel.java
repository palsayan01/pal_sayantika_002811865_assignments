/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UserInterface.WorkAreas.AdminRole.AdministerUserAccountsWorkResp;

import Business.Business;
import Business.Person.Person;
import Business.Person.PersonDirectory;
import Business.Profiles.EmployerDirectory;
import Business.Profiles.FacultyDirectory;
import Business.Profiles.FacultyProfile;
import Business.Profiles.Profile;
import Business.Profiles.StudentDirectory;
import Business.Profiles.ThirdPartyDirectory;
import Business.UserAccounts.UserAccount;
import Business.UserAccounts.UserAccountDirectory;
import UserInterface.WorkAreas.AdminRole.AdminRoleWorkAreaJPanel;
import com.lowagie.text.Document;
import com.lowagie.text.pdf.PdfPTable;
import com.lowagie.text.pdf.PdfWriter;
import java.io.FileOutputStream;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JSplitPane;
import javax.swing.table.DefaultTableModel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;

/**
 *
 * @author anupb
 */
public class ManageFacultyJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageFacultyJPanel
     */
    JSplitPane splitPane;    
    PersonDirectory personDirectory;
    UserAccountDirectory useraccountdirectory;
    StudentDirectory studentdirectory;
    FacultyDirectory facultydirectory;
    Person prsn;
    UserAccount userAcc;
    javax.swing.JPanel CardSequencePanel;
    Business business;
    ThirdPartyDirectory thirdpartydirectory;
    EmployerDirectory employerdirectory;
    
    
    public ManageFacultyJPanel(JSplitPane splitPane, PersonDirectory personDirectory,Person prsn , UserAccountDirectory useraccountdirectory, FacultyDirectory facultydirectory, StudentDirectory studentdirectory, UserAccount userAcc, ThirdPartyDirectory thirdpartydirectory, EmployerDirectory employerdirectory) {
        initComponents();
        
        
        this.splitPane = splitPane;
        this.personDirectory = personDirectory;
        this.useraccountdirectory=useraccountdirectory;
        this.facultydirectory=facultydirectory;
        this.studentdirectory=studentdirectory;
        this.prsn=prsn;
        this.userAcc = userAcc; 
        this.thirdpartydirectory=thirdpartydirectory;
        this.employerdirectory=employerdirectory;
        
        displaydata();
        
        
        
        
        
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblView = new javax.swing.JTable();
        btnFanalytics = new javax.swing.JButton();
        btnPdf = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();

        tblView.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Faculty id", "Name", "Expertise", "Rating"
            }
        ));
        jScrollPane1.setViewportView(tblView);

        btnFanalytics.setText("Show Analytics");
        btnFanalytics.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFanalyticsActionPerformed(evt);
            }
        });

        btnPdf.setText("Generate PDF");
        btnPdf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPdfActionPerformed(evt);
            }
        });

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(157, 157, 157)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnFanalytics)
                        .addGap(18, 18, 18)
                        .addComponent(btnPdf, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(btnBack))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 593, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(176, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnBack, btnFanalytics, btnPdf});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(85, 85, 85)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPdf)
                    .addComponent(btnFanalytics)
                    .addComponent(btnBack))
                .addContainerGap(303, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnPdfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPdfActionPerformed
        // TODO add your handling code here:
                // TODO add your handling code here:
        
                // TODO add your handling code here:
        
        String path="";
        JFileChooser j = new JFileChooser();
        j.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int x = j.showSaveDialog(this);
        if(x==JFileChooser.APPROVE_OPTION){
        
        path=j.getSelectedFile().getPath();
        
        }
        Document doc = new Document();
        
        try
        {
            PdfWriter.getInstance(doc, new FileOutputStream(path+"/abc.pdf"));
            doc.open();
            PdfPTable tbl=new PdfPTable(4);
            tbl.addCell("FAculty ID");
            tbl.addCell("Name");
            tbl.addCell("Expertise");
            tbl.addCell("Rating");

            
             for(int i=0; i< tblView.getRowCount(); i++){
             
             String facid = tblView.getValueAt(i, 0).toString();
             String name = tblView.getValueAt(i, 1).toString();
             String exp = tblView.getValueAt(i, 2).toString();
             String rtg = tblView.getValueAt(i, 3).toString();

             
             tbl.addCell(facid);
             tbl.addCell(name);
             tbl.addCell(exp);
             tbl.addCell(rtg);

             
             
             }
             
             doc.add(tbl);
            
             JOptionPane.showMessageDialog(null, "PDF generated");
        
        }
        
        catch(Exception e){
        
        
        JOptionPane.showMessageDialog(null, "something wrong");
        }
        
        doc.close(); 
        
        
        
        
    }//GEN-LAST:event_btnPdfActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        
        AdminRoleWorkAreaJPanel arjpl = new AdminRoleWorkAreaJPanel( business, CardSequencePanel, splitPane, personDirectory, useraccountdirectory, facultydirectory, studentdirectory, thirdpartydirectory, employerdirectory);
        splitPane.setRightComponent(arjpl);
        
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnFanalyticsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFanalyticsActionPerformed
        // TODO add your handling code here:
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();

    // You can add data to the dataset here
//    dataset.addValue(10, "Category 1", "Value 1");
//    dataset.addValue(20, "Category 2", "Value 2");
//    dataset.addValue(30, "Category 3", "Value 3");
    
    for(FacultyProfile fac: facultydirectory.getFacultylist()){
        dataset.addValue(fac.getRating(),fac.getPerson().getName(),fac.getPerson().getName());
    }
    
    
    JFreeChart chart = ChartFactory.createBarChart("Bar graph", "Category","Value", dataset, PlotOrientation.HORIZONTAL, true, true, true);
    
    ChartPanel chartPanel = new ChartPanel(chart);
    JFrame chartFrame = new JFrame("Bar Chart");
    chartFrame.getContentPane().add(chartPanel);
    chartFrame.setSize(900, 900);
    chartFrame.setVisible(true);
    }//GEN-LAST:event_btnFanalyticsActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnFanalytics;
    private javax.swing.JButton btnPdf;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblView;
    // End of variables declaration//GEN-END:variables

    private void displaydata() {
        
        DefaultTableModel model = (DefaultTableModel) tblView.getModel();
        model.setRowCount(0);
        System.out.println(facultydirectory.getFacultylist());
        for(FacultyProfile fac: facultydirectory.getFacultylist()){
            
            Object[] info = new Object[4];
            info[0] = fac.getPerson().getPersonId();
            info[1] = fac.getPerson().getName();
            info[2] = fac.getExpertise();
            info[3] = fac.getRating();
            
            
            
            model.addRow(info);
            
        }
        
        
        
        
    }
    
    
    
}
