/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UserInterface.WorkAreas.AdminRole.AdministerUserAccountsWorkResp;

import Business.Person.Person;
import Business.Person.PersonDirectory;
import Business.Profiles.EmployerDirectory;
import Business.Profiles.FacultyDirectory;
import Business.Profiles.Profile;
import Business.Profiles.StudentDirectory;
import Business.Profiles.ThirdPartyDirectory;
import Business.UserAccounts.UserAccount;
import Business.UserAccounts.UserAccountDirectory;
import com.lowagie.text.Document;
import com.lowagie.text.pdf.PdfPTable;
import com.lowagie.text.pdf.PdfWriter;
import java.io.FileOutputStream;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JSplitPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author anupb
 */
public class UserAccount4JPanel extends javax.swing.JPanel {

    /**
     * Creates new form UserAccount4JPanel
     */
    
    JSplitPane splitPane;    
    PersonDirectory personDirectory;
    UserAccountDirectory useraccountdirectory;
    FacultyDirectory facultydirectory;
    StudentDirectory studentdirectory;
    Person prsn;
    ThirdPartyDirectory thirdpartydirectory;
    UserAccount userAcc;
    Profile profile;
    EmployerDirectory employerdirectory;
    
    
    public UserAccount4JPanel(JSplitPane splitPane, PersonDirectory personDirectory,Person prsn ,UserAccountDirectory useraccountdirectory, FacultyDirectory facultydirectory, StudentDirectory studentdirectory,UserAccount userAcc, ThirdPartyDirectory thirdpartydirectory, EmployerDirectory employerdirectory) {
        initComponents();
        
        this.splitPane = splitPane;
        this.personDirectory = personDirectory;
        this.useraccountdirectory=useraccountdirectory;
        this.facultydirectory=facultydirectory;
        this.studentdirectory=studentdirectory;
        this.prsn=prsn;
        this.thirdpartydirectory=thirdpartydirectory;
        this.userAcc = userAcc;
        this.employerdirectory=employerdirectory;
        
        
        
        viewdisplay();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnUpdate = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblView = new javax.swing.JTable();
        jLabel11 = new javax.swing.JLabel();
        btnManage = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnPdf = new javax.swing.JButton();

        btnUpdate.setText("Update/Refresh Table");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        tblView.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Name", "Username", "Password", "Role", "Status"
            }
        ));
        jScrollPane1.setViewportView(tblView);

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel11.setText("VIEW USER ACCOUNT");

        btnManage.setText("Manage User Account");
        btnManage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnManageActionPerformed(evt);
            }
        });

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete Account");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnPdf.setText("Generate PDF");
        btnPdf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPdfActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(107, 107, 107)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnUpdate)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnManage)
                                .addGap(34, 34, 34)
                                .addComponent(btnBack, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(btnDelete)
                                .addGap(18, 18, 18)
                                .addComponent(btnPdf))
                            .addComponent(jScrollPane1)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(250, 250, 250)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 107, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnBack, btnDelete, btnManage});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnUpdate)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnManage)
                    .addComponent(btnBack)
                    .addComponent(btnDelete)
                    .addComponent(btnPdf))
                .addContainerGap(231, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        
        viewdisplay();
        
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnManageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnManageActionPerformed
        // TODO add your handling code here:
        
       // int selectedRow = tblView.getSelectedRow();
        
        int selectedRow=tblView.getSelectedRow();
        if (selectedRow<0)
        JOptionPane.showMessageDialog(this, "Please select a row", "Warning", JOptionPane.WARNING_MESSAGE);       
        DefaultTableModel searchModel=(DefaultTableModel)tblView.getModel();
        userAcc=(UserAccount) searchModel.getValueAt(selectedRow, 0);
        System.out.println("Create acc buttob:"+useraccountdirectory);
        System.out.println("Create acc buttob:"+userAcc.getPrsn());
//           UserAccount usr= new UserAccount(prsn,profile,un, pw,role, status);
//           usr.setNeuid(txtcNeuid.getText());
//           p.setName(txtcName.getText());
//           p.setCourse(txtcCourse.getText());
//           p.setEmailid(txtcEmail.getText());


        UserAccount1JPanel uajpl1 = new UserAccount1JPanel(splitPane, personDirectory,prsn, useraccountdirectory, facultydirectory, studentdirectory,userAcc, thirdpartydirectory, employerdirectory);
        splitPane.setRightComponent(uajpl1);

        
        
    }//GEN-LAST:event_btnManageActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        
                int selectedRow = tblView.getSelectedRow();
                if(selectedRow >= 0){
          
                     int dialogButton = JOptionPane.YES_NO_OPTION;
                     int dialogResult = JOptionPane.showConfirmDialog(null, "Would you like to delete the account details?", "Warning", dialogButton);
                     if(dialogResult == JOptionPane.YES_OPTION){
          
                       UserAccount ua = (UserAccount) tblView.getValueAt(selectedRow, 0);
                       if(!ua.getPersonId().equals("1")){
                       useraccountdirectory.deletePerson(ua);
                       viewdisplay();
                       }
                       else{
                       
                       JOptionPane.showMessageDialog(null, "You cannot delete ADMIN", "Warning", JOptionPane.WARNING_MESSAGE);
                       }
              
          }  
        }
        
        else{
        
           JOptionPane.showMessageDialog(null, "Please select a row from the table first", "Warning", JOptionPane.WARNING_MESSAGE);
        }
        
        
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        
        UserAccount2JPanel uajpl2 = new UserAccount2JPanel(splitPane, personDirectory,prsn, useraccountdirectory, facultydirectory, studentdirectory, userAcc, thirdpartydirectory, employerdirectory);
        splitPane.setRightComponent(uajpl2);
        
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnPdfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPdfActionPerformed
        // TODO add your handling code here:
        
                // TODO add your handling code here:
        
        String path="";
        JFileChooser j = new JFileChooser();
        j.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int x = j.showSaveDialog(this);
        if(x==JFileChooser.APPROVE_OPTION){
        
        path=j.getSelectedFile().getPath();
        
        }
        Document doc = new Document();
        
        try
        {
            PdfWriter.getInstance(doc, new FileOutputStream(path+"/abc.pdf"));
            doc.open();
            PdfPTable tbl=new PdfPTable(6);
            tbl.addCell("ID");
            tbl.addCell("Name");
            tbl.addCell("Username");
            tbl.addCell("Password");
            tbl.addCell("Role");
            tbl.addCell("Status");
            
             for(int i=0; i< tblView.getRowCount(); i++){
             
             String id = tblView.getValueAt(i, 0).toString();
             String name = tblView.getValueAt(i, 1).toString();
             String username = tblView.getValueAt(i, 2).toString();
             String password = tblView.getValueAt(i, 3).toString();
             String role = tblView.getValueAt(i, 4).toString();
             String status = tblView.getValueAt(i, 5).toString();
             
             tbl.addCell(id);
             tbl.addCell(name);
             tbl.addCell(username);
             tbl.addCell(password);
             tbl.addCell(role);
             tbl.addCell(status);
             
             
             }
             
             doc.add(tbl);
            
             JOptionPane.showMessageDialog(null, "PDF generated");
        
        }
        
        catch(Exception e){
        
        
        JOptionPane.showMessageDialog(null, "something wrong");
        }
        
        doc.close(); 
        
        
    }//GEN-LAST:event_btnPdfActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnManage;
    private javax.swing.JButton btnPdf;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblView;
    // End of variables declaration//GEN-END:variables

    private void viewdisplay() {
        
            DefaultTableModel model = (DefaultTableModel) tblView.getModel();
            model.setRowCount(0);
        
            for(UserAccount usr: useraccountdirectory.getUserAccountList()){
            
            Object[] info = new Object[6];
            info[0] = usr;
            info[1] = usr.getPrsn().getName();
            info[2] = usr.getUsername();
            info[3] = usr.getPassword();
            info[4] = usr.getRole();
            info[5] = usr.getStatus();
            
            
            model.addRow(info);
            
        }
        
    }
}
